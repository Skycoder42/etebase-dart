name: Compile native libetebase binaries

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feature/rust-ci-improvements # TODO remove
    paths:
      - packages/etebase_flutter/tool/libetebase/**
      - .github/workflows/libetebase.yaml

env:
  libetebaseVersion: 0.5.5

jobs:
  build:
    name: Compile binaries
    strategy:
      fail-fast: false
      matrix:
        platform:
          - android_arm64-v8a
          - android_armeabi-v7a
          - android_x86_64
          - android_x86
          - ios_arm64
          - ios_simulator_arm64
          - ios_simulator_x86_64
          - linux
          - macos_arm64
          - macos_x86_64
          - windows

        include:
          - platform: ios_arm64
            runs-on: macos-latest
          - platform: ios_simulator_arm64
            runs-on: macos-latest
          - platform: ios_simulator_x86_64
            runs-on: macos-latest
          - platform: macos_arm64
            runs-on: macos-latest
          - platform: macos_x86_64
            runs-on: macos-latest
          - platform: windows
            runs-on: windows-latest
    runs-on: ${{ matrix.runs-on || 'ubuntu-latest' }}
    steps:
      - name: Install scoop
        if: runner.os == 'Windows'
        run: |
          iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
          Join-Path (Resolve-Path ~).Path "scoop\shims" >> $Env:GITHUB_PATH
        shell: pwsh
      - name: Install Flutter-SDK
        uses: subosito/flutter-action@v2
        with:
          cache: true
      - name: Install minisign
        uses: Skycoder42/dart_test_tools/.github/actions/install-minisign@main
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Restore dependencies
        run: flutter pub get
        working-directory: packages/etebase_flutter
      - name: Build libetebase binaries
        run: dart run tool/libetebase/build.dart '${{ matrix.platform }}' '${{ env.libetebaseVersion }}'
        working-directory: packages/etebase_flutter
      - name: Create artifact
        uses: actions/upload-artifact@v3
        with:
          name: libetebase-${{ matrix.platform }}
          path: ${{ runner.temp }}/libetebase-${{ matrix.platform }}
          if-no-files-found: error
          retention-days: 1

  update_release:
    name: Update release with new binaries
    needs:
      - build
    runs-on: macos-latest # needed for lipo
    permissions:
      contents: write
    steps:
      - name: Install Flutter-SDK
        uses: subosito/flutter-action@v2
        with:
          cache: true
      - name: Install minisign
        uses: Skycoder42/dart_test_tools/.github/actions/install-minisign@main
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Download all binary artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Create secret key for minisign
        run: echo '${{ secrets.MINISIGN_SECRET_KEY }}' > '${{ runner.temp }}/minisign.key'
      - name: Restore dependencies
        run: flutter pub get
        working-directory: packages/etebase_flutter
      - name: Build release archives
        run: dart run tool/libetebase/publish.dart '${{ env.libetebaseVersion }}'
        working-directory: packages/etebase_flutter
      - name: Cleanup minisign key
        if: always()
        run: rm -f '${{ runner.temp }}/minisign.key'
      - name: Create or update release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: libetebase-binaries/v${{ env.libetebaseVersion }}
          name: "[INTERNAL] Precompiled libetebase binaries v${{ env.libetebaseVersion }}"
          body: Internal release of precompiled libetebase binaries, required for the etebase_libs package.
          prerelease: true
          files: publish/*
          fail_on_unmatched_files: true
